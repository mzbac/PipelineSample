---
AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  Image:
    Type: String
  ECSCluster:
    Type: String
  VPC:
    Type: String
  Subnets:
    Type: List
Resources:
  LoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP access on port 80
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '80'
        ToPort: '80'
        CidrIp: '0.0.0.0/0'
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      SecurityGroups:
        - !Ref LoadBalancerSecurityGroup
      Subnets: !Ref Subnets
  HttpListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - TargetGroupArn: !Ref TargetGroup
          Type: forward
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 1234
      HealthCheckPath: /
      Protocol: HTTP
      VpcId: !Ref VPC
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 30
  TaskDefinition:
    Type: "AWS::ECS::TaskDefinition"
    Properties:
      Family: !Sub ${AWS::StackName}-WebApiSample
      ContainerDefinitions:
        - Name: webapisample
          Image: !Ref Image
          MemoryReservation: 256
          PortMappings:
            - ContainerPort: 80
  Service:
    Type: AWS::ECS::Service
    DependsOn:
      - HttpListener
    Properties:
      Cluster: !Ref ECSCluster
      DesiredCount: 2
      PlacementStrategies:
        - Type: spread
          Field: instanceId
      LoadBalancers:
        - ContainerName: webapisample
          ContainerPort: 80
          TargetGroupArn: !Ref TargetGroup
      TaskDefinition: !Ref TaskDefinition
